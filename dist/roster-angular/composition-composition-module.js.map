{"version":3,"sources":["./src/app/composition/composition.component.ts","./src/app/composition/composition.component.html","./src/app/composition/composition.service.ts","./src/app/composition/composition-routing.module.ts","./src/app/composition/composition.module.ts"],"names":[],"mappings":"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","file":"composition-composition-module.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Character } from '../_entities/character';\nimport { CompositionService } from './composition.service';\nimport { Player } from '../_entities/player';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport html2canvas from 'html2canvas';\n\n@Component({\n  selector: 'app-composition',\n  templateUrl: './composition.component.html',\n  styleUrls: ['./composition.component.scss'],\n})\nexport class CompositionComponent implements OnInit {\n  @ViewChild('raidGroups') raidGroups!: ElementRef;\n\n  capturingScreenshot: boolean = false;\n  characters: Character[] = [];\n  formGroup: FormGroup = new FormGroup({\n    eventId: new FormControl(''),\n    player: new FormControl(''),\n    characterClass: new FormControl(''),\n    characterRole: new FormControl(''),\n    characterRank: new FormControl(''),\n    characterLevel: new FormControl(''),\n  });\n  signedPlayers: string[] = [];\n  get filteredCharacters(): Character[] {\n    return this.characters.filter((c) => {\n      const {\n        player,\n        characterClass,\n        characterRole,\n        characterRank,\n        characterLevel,\n      } = this.formGroup.getRawValue();\n      const filtersPassed = [];\n      if (player) {\n        filtersPassed.push(c.player?.name === player);\n      }\n      if (characterClass) {\n        filtersPassed.push(c.class === characterClass);\n      }\n      if (characterRole) {\n        filtersPassed.push(c.role === characterRole);\n      }\n      if (characterRank) {\n        filtersPassed.push(c.rank === characterRank);\n      }\n      if (characterLevel && characterLevel !== 'null') {\n        filtersPassed.push(c.level === Number(characterLevel));\n      }\n      if (this.signedPlayers.length && c.player?.discord?.userId) {\n        filtersPassed.push(this.signedPlayers.includes(c.player.discord.userId));\n      }\n      return filtersPassed.every((condition: boolean) => condition);\n    }).sort((a, b) =>\n      a.class === b.class\n        ? a.name > b.name ? 1 : -1\n        : a.class > b.class ? 1 : -1\n    );\n  }\n  raids: Character[][] = [];\n\n  dragFromRaidIndex?: number;\n  dragFromSlotIndex?: number;\n  dragToRaidIndex?: number|undefined;\n  dragToSlotIndex?: number|undefined;\n  draggableCharacter?: Character;\n\n  constructor(\n    private httpClient: HttpClient,\n    private compositionService: CompositionService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n  ) {\n    this.characters = this.compositionService.characters;\n  }\n\n  ngOnInit(): void {\n    this.updateSignedUpPlayers();\n    this.eventIdChangesHandler();\n    this.subscribeForRaidChanges();\n    this.handleActivatedRouteQueryParams();\n    this.handleFormChange();\n  }\n\n  handleActivatedRouteQueryParams(): void {\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      for (let key in params) {\n        this.formGroup.get(key)?.setValue(decodeURIComponent(params[key]));\n      }\n    });\n  }\n\n  handleFormChange(): void {\n    this.formGroup.valueChanges.subscribe((value) => {\n      const queryParams: Params = {};\n      for (let key in value) {\n        queryParams[key] = encodeURIComponent(value[key]);\n      }\n      this.router.navigate(\n        [],\n        {\n          relativeTo: this.activatedRoute,\n          queryParams,\n          queryParamsHandling: 'merge', // remove to replace all query params by provided\n        }\n      );\n    });\n  }\n\n  eventIdChangesHandler(): void {\n    this.formGroup.get('eventId')?.valueChanges.subscribe(() => {\n      this.updateSignedUpPlayers();\n    });\n  }\n\n  isCharacterAvailable(character: Character) {\n    const condictions: boolean[] = [\n      !this.characterAlreadyInUse(character),\n      (!!character.player && !this.playerUsedInEveryRaid(character.player)),\n    ]\n    return condictions.every((condition: boolean) => condition);\n  }\n\n  characterAlreadyInUse(character: Character) {\n    return this.compositionService.characterUsedInAnyRaid(character);\n  }\n\n  playerUsedInEveryRaid(player: Player) {\n    return this.compositionService.playerUsedInEveryRaid(player);\n  }\n\n  subscribeForRaidChanges() {\n    this.compositionService.raidsSubject.subscribe((raids) => {\n      this.raids = raids;\n    });\n  }\n\n  updateSignedUpPlayers() {\n    if (this.formGroup.get('eventId')?.value) {\n      this.httpClient.get(`https://raid-helper.dev/api/v2/events/${this.formGroup.get('eventId')?.value}`).subscribe((response: any) => {\n        if (response) this.signedPlayers = response.signUps.filter((player: any) => player.className !== 'Absence').map((player: any) => player.userId);\n      }, () => {\n        this.signedPlayers = [];\n      })\n    }\n  }\n\n  resetData() {\n    this.dragFromRaidIndex = undefined;\n    this.dragFromSlotIndex = undefined;\n    this.dragToRaidIndex = undefined;\n    this.dragToSlotIndex = undefined;\n    this.draggableCharacter = undefined;\n  }\n\n  dragFromSidebar(character: Character) {\n    this.draggableCharacter = character;\n  }\n\n  dragToRaid(raidId: number, slotId: number) {\n    if (typeof this.dragFromRaidIndex !== 'undefined' && typeof this.dragFromSlotIndex !== 'undefined' && this.draggableCharacter) {\n      this.compositionService.moveCharacter(this.dragFromRaidIndex, this.dragFromSlotIndex, raidId, slotId, this.draggableCharacter);\n    } else if (this.draggableCharacter) {\n      this.compositionService.addCharacterToRaid(raidId, slotId, this.draggableCharacter);\n    }\n    this.resetData();\n  }\n\n  onSidebarDragend() {\n    if (typeof this.dragToRaidIndex !== 'undefined' && typeof this.dragToSlotIndex !== 'undefined') this.dragToRaid(this.dragToRaidIndex, this.dragToSlotIndex);\n    this.resetData();\n  }\n\n  onRaidSlotClick(raidId: number, slotId: number) {\n    this.compositionService.deleteCharacter(raidId, slotId);\n  }\n\n  onRaidDragOver(raidId: number, slotId: number) {\n    this.dragToRaidIndex = raidId;\n    this.dragToSlotIndex = slotId;\n  }\n\n  onRaidSlotDragStart(raidId: number, slotId: number) {\n    this.dragFromRaidIndex = raidId;\n    this.dragFromSlotIndex = slotId;\n    this.draggableCharacter = this.raids[raidId][slotId];\n  }\n\n  onRaidSlotDragEnd() {\n    if (typeof this.dragToRaidIndex !== 'undefined' && typeof this.dragToSlotIndex !== 'undefined') this.dragToRaid(this.dragToRaidIndex, this.dragToSlotIndex);\n    this.resetData();\n  }\n\n  onSidebarCharacterClick(character: Character) {\n    this.compositionService.pushCharacter(character);\n  }\n\n  onRaidPruneClick(raidId: number) {\n    this.compositionService.resetRaid(raidId);\n  }\n\n  onRaidRemoveClick(raidId: number) {\n    this.compositionService.removeRaid(raidId);\n  }\n\n  onAddRaidClick() {\n    this.compositionService.addRaid();\n  }\n\n  screenshot() {\n    this.capturingScreenshot = true;\n    html2canvas(this.raidGroups.nativeElement, {\n      backgroundColor: '#404040'\n    }).then(canvas => {\n      canvas.toBlob(blob => {\n        // @ts-ignore\n        navigator.clipboard.write([new ClipboardItem({'image/png': blob})])\n      });\n    }).finally(() => {\n      setTimeout(() => {\n        this.capturingScreenshot = false;\n      }, 500);\n    });\n  }\n}\n","<aside>\n  <form class=\"filters\" [formGroup]=\"formGroup\">\n    <label for=\"eventId\">Event ID</label>\n    <input id=\"eventId\" type=\"string\" formControlName=\"eventId\">\n<!--    <label for=\"player\">Player</label>-->\n<!--    <select id=\"player\" formControlName=\"player\"><option value=\"\">All</option><option *ngFor=\"let option of players\" [value]=\"option.name\">{{option.name}}</option></select>-->\n<!--    <label for=\"characterClass\">Class</label>-->\n<!--    <select id=\"characterClass\" formControlName=\"characterClass\"><option value=\"\">All</option><option *ngFor=\"let option of characterClasses | keyvalue\" [value]=\"option.value\">{{option.value}}</option></select>-->\n<!--    <label for=\"characterRole\">Role</label>-->\n<!--    <select id=\"characterRole\" formControlName=\"characterRole\"><option value=\"\">All</option><option *ngFor=\"let option of characterRoles | keyvalue\" [value]=\"option.value\">{{option.value}}</option></select>-->\n<!--    <label for=\"characterRank\">Rank</label>-->\n<!--    <select id=\"characterRank\" formControlName=\"characterRank\"><option value=\"\">All</option><option *ngFor=\"let option of characterRank | keyvalue\" [value]=\"option.value\">{{option.value}}</option></select>-->\n<!--    <label for=\"characterLevel\">Level</label>-->\n<!--    <input type=\"number\" id=\"characterLevel\" formControlName=\"characterLevel\">-->\n  </form>\n  <ul class=\"characters\">\n    <li *ngFor=\"let character of filteredCharacters\">\n      <app-character-tile\n        [class.used]=\"!isCharacterAvailable(character)\"\n        [draggable]=\"isCharacterAvailable(character)\"\n        [character]=\"character\"\n        (dragstart)=\"dragFromSidebar(character)\"\n        (dragend)=\"onSidebarDragend()\"\n        (click)=\"onSidebarCharacterClick(character)\"\n      ></app-character-tile>\n    </li>\n  </ul>\n</aside>\n<section>\n  <div #raidGroups class=\"raid-groups\">\n    <app-raid-tile\n      *ngFor=\"let raid of raids; index as i\"\n      [raid]=\"raids[i]\"\n      [title]=\"'Raid #' + (i+1)\"\n      (onSlotClick)=\"onRaidSlotClick(i, $event)\"\n      (onSlotDragStart)=\"onRaidSlotDragStart(i, $event)\"\n      (onSlotDragEnd)=\"onRaidSlotDragEnd()\"\n      (onDragOver)=\"onRaidDragOver(i, $event)\"\n      (onPruneClick)=\"onRaidPruneClick(i)\"\n      (onRemoveClick)=\"onRaidRemoveClick(i)\"\n    ></app-raid-tile>\n  </div>\n  <div class=\"actions\">\n    <button [disabled]=\"capturingScreenshot\" class=\"capture-screenshot\" (click)=\"screenshot()\" type=\"button\"><span class=\"icon-photo\" [class.loading]=\"capturingScreenshot\"></span></button>\n    <button class=\"add-raid\" (click)=\"onAddRaidClick()\" type=\"button\">➕</button>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { Character } from '../_entities/character';\nimport { Player } from '../_entities/player';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { players } from '../_data/players.data';\n\n@Injectable()\nexport class CompositionService {\n  characters: Character[] = players.reduce((characters: Character[], player: Player) => {\n    return !!player && !!player.characters ? [\n      ...characters,\n      ...player.characters.map(character => ({...character, player: { name: player.name, discord: player.discord }})),\n    ] : characters;\n  }, []);\n\n  public raidsSubject: BehaviorSubject<Character[][]> = new BehaviorSubject<Character[][]>([]);\n\n  get raids(): Character[][] {\n    return this.raidsSubject.value;\n  }\n\n  set raids(raids: Character[][]) {\n    this.raidsSubject.next(raids);\n    this.writeRaidsToQueryParams();\n  }\n\n  get emptyRaid(): Character[] {\n    return new Array(10).fill(null);\n  }\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n  ) {\n    this.readRaidFromQueryParams();\n  }\n\n  readRaidFromQueryParams(): void {\n    const raidsParam = this.activatedRoute.snapshot.queryParamMap.get('raids');\n    if (raidsParam) {\n      // @ts-ignore\n      this.raids = decodeURIComponent(raidsParam).split('-')\n        .map((r: string) =>\n          r.split('_').map((name) => this.characters.find((character) => character.name === name || null))\n        );\n    }\n  }\n\n  writeRaidsToQueryParams(): void {\n    const raids: string = this.raids.map((raid: Character[]) => raid.map((character: Character) => character?.name || '').join('_')).join('-');\n    const queryParams: Params = { raids: encodeURIComponent(raids) };\n    this.router.navigate(\n      [],\n      {\n        relativeTo: this.activatedRoute,\n        queryParams,\n        queryParamsHandling: 'merge',\n      }\n    );\n  }\n\n  playerAlreadyInRaid(raidId: number, player?: Player): boolean {\n    return this.raids[raidId].some((character: Character) => character?.player && player && character.player.name === player?.name);\n  }\n\n  playerUsedInEveryRaid(player?: Player): boolean {\n    return this.raids.every((raid: Character[]) => {\n      return raid.some((character: Character) => character?.player?.name && character.player.name === player?.name);\n    });\n  }\n\n  characterUsedInAnyRaid(character: Character): boolean {\n    return this.raids.some((raid: Character[]) => raid.some((c: Character) => c?.name === character.name));\n  }\n\n  highlightPlayerInRaid(raidId: number, player?: Player): void {\n    const character = this.raids.find((raid: Character[], i: number) => {\n      return i === raidId;\n    })?.find((c: Character) => {\n      return c?.player?.name === player?.name;\n    });\n    if (character) {\n      character.highlight = true;\n      setTimeout(() => {\n        character.highlight = false;\n      }, 2000);\n    }\n  }\n\n  pushCharacter(character: Character): void {\n    let inserted = false;\n    if (!this.characterUsedInAnyRaid(character)) {\n      this.raids = this.raids.reduce((raids: Character[][], raid: Character[], i: number) => {\n        return [\n          ...raids,\n          raid.map((c: Character) => {\n            if (!c && !inserted && !this.playerAlreadyInRaid(i, character.player)) {\n              inserted = true;\n              return character;\n            } else {\n              return c;\n            }\n          }),\n        ];\n      }, []);\n    }\n  }\n\n  addCharacterToRaid(raidId: number, slotId: number, character: Character): void {\n    if (this.characterUsedInAnyRaid(character)) {\n      return;\n    }\n    if (this.playerAlreadyInRaid(raidId, character.player)) {\n      this.highlightPlayerInRaid(raidId, character?.player);\n      return;\n    }\n    this.raids = this.raids.map((raid, i) => {\n      return i !== raidId ? raid : raid.map((c, k) => k !== slotId ? c : character);\n    });\n  }\n\n  moveCharacter(fromRaidId: number, fromSlot: number, toRaidId: number, toSlot: number, character: Character): void {\n    const thisCharacterInRaid = this.raids[toRaidId].some((c) => c?.name === character.name);\n    if (this.playerAlreadyInRaid(toRaidId, character.player) && !thisCharacterInRaid) {\n      this.highlightPlayerInRaid(toRaidId, character?.player);\n      return;\n    }\n\n    let charToSwap: Character|undefined;\n    if (this.raids[toRaidId][toSlot]) {\n      charToSwap = this.raids[toRaidId][toSlot];\n    }\n    this.raids[toRaidId][toSlot] = this.raids[fromRaidId][fromSlot];\n\n    if (charToSwap) {\n      this.raids[fromRaidId][fromSlot] = charToSwap;\n    } else {\n      this.deleteCharacter(fromRaidId, fromSlot);\n    }\n  }\n\n  deleteCharacter(fromRaidId: number, fromSlot: number): void {\n    // @ts-ignore\n    this.raids = this.raids.map((raid: Character[], raidId) => {\n      return raid.map((character, slotId) => raidId === fromRaidId && slotId === fromSlot ? null : character);\n    });\n  }\n\n  resetRaid(raidId: number): void {\n    this.raids = this.raids.map((raid: Character[], i) => i === raidId ? this.emptyRaid : raid);\n  }\n\n  removeRaid(raidId: number): void {\n    this.raids = this.raids.filter((raid: Character[], i) => i !== raidId);\n  }\n\n  addRaid(): void {\n    this.raids = [...this.raids, this.emptyRaid];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompositionComponent } from './composition.component';\n\nconst routes: Routes = [{ path: '', component: CompositionComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompositionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CompositionRoutingModule } from './composition-routing.module';\nimport { CompositionComponent } from './composition.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CompositionService } from './composition.service';\n\n@NgModule({\n  declarations: [\n    CompositionComponent,\n  ],\n  imports: [\n    CommonModule,\n    CompositionRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    CompositionService,\n  ],\n})\nexport class CompositionModule { }\n"],"sourceRoot":"webpack:///"}